@* @using Microsoft.AspNetCore.Http
@model IEnumerable<dynamic>


<h1>Users</h1>

<form method="get" action="@Url.Action("ListAll", "Admin")">
    <input type="text" name="searchString" placeholder="Search..."
           value="@ViewContext.HttpContext.Request.Query["searchString"]" />

    <select name="sortOrder" id="sortOrder">
        <option value="username_asc">Username (A-Z)</option>
        <option value="username_desc">Username (Z-A)</option>
        <option value="numOfposts_asc">Fewest Posts</option>
        <option value="numOfposts_desc">Most Posts</option>
        <option value="role_asc">Role (A-Z)</option>
        <option value="role_desc">Role (Z-A)</option>
    </select>

    <button type="submit">Search in Users</button>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var sortOrder = '@ViewBag.SortOrder';  
        var selectElement = document.getElementById('sortOrder');
        
        for (var i = 0; i < selectElement.options.length; i++) {
            if (selectElement.options[i].value === sortOrder) {
                selectElement.selectedIndex = i;
                break;
            }
        }
    });
</script>

@foreach (var item in Model)
{
    var user = item.User;
    var latestPost = item.LatestPost;

    <div>
        <h2>@user.username</h2>
        <p>Number of Posts: @user.numOfposts</p>
        <p>Role : @user.role</p>

        @if (latestPost != null)
        {
            <div>
                <h3>Latest Post</h3>
                <p>@latestPost.title</p>
                <small>Posted on @latestPost.createdAt.ToString("g")</small>
                <small>Verified: @latestPost.isVerified</small>
                <p>❤️ @latestPost.hearts</p>
                <p>
                    <a href="@Url.Action("Verify", "Admin", new { id = latestPost.id })">Verify</a> |
                    <a href="@Url.Action("Delete", "Posts", new { id = latestPost.id })">Delete</a>
                </p>
            </div>
        }
        else
        {
            <p>@user.username have not post anything yet.</p>
        }
    </div>
}
 *@

@* TODO: do it better, do second page for all posts with verification and deleting*@
@using Microsoft.AspNetCore.Http
@model IEnumerable<dynamic>

<h1>Users</h1>

<form method="get" action="@Url.Action("ListAll", "Admin")">
    <input type="text" name="searchString" placeholder="Search..."
           value="@ViewContext.HttpContext.Request.Query["searchString"]" />

    <select name="sortOrder" id="sortOrder">
        <option value="username_asc">Username (A-Z)</option>
        <option value="username_desc">Username (Z-A)</option>
        <option value="numOfposts_asc">Fewest Posts</option>
        <option value="numOfposts_desc">Most Posts</option>
        <option value="role_asc">Role (A-Z)</option>
        <option value="role_desc">Role (Z-A)</option>
    </select>

    <button type="submit">Search in Users</button>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var sortOrder = '@ViewBag.SortOrder';  
        var selectElement = document.getElementById('sortOrder');
        
        for (var i = 0; i < selectElement.options.length; i++) {
            if (selectElement.options[i].value === sortOrder) {
                selectElement.selectedIndex = i;
                break;
            }
        }
    });
</script>

<div class="body">
    @foreach (var item in Model)
    {
        var user = item.User;
        var latestPost = item.LatestPost;

        <div class="card @((latestPost != null ? "border-secondary" : "border-warning"))">
            <div class="card-body">
                <h2 class="card-title">@user.username</h2>
                <p class="card-text">Number of Posts: @user.numOfposts</p>
                <p class="card-text">Role: @user.role</p>

                @if (latestPost != null)
                {
                    <div class="latest-post">
                        <h3>Latest Post</h3>
                        <p>@latestPost.title</p>
                        <small>Posted on @latestPost.createdAt.ToString("g")</small>
                        <small>Verified: @latestPost.isVerified</small>
                        <p>❤️ @latestPost.hearts</p>
                        <p>
                            <a href="@Url.Action("Verify", "Admin", new { id = latestPost.id })">Verify</a> |
                            <a href="@Url.Action("Delete", "Posts", new { id = latestPost.id })">Delete</a>
                        </p>
                    </div>
                }
                else
                {
                    <p>@user.username has not posted anything yet.</p>
                }
            </div>
        </div>
    }
</div>

<style>
    h1 {
        text-align: center;
        margin-top: 20px;
    }

    .body {
        max-width: 1000px;
        margin: 0 auto;
    }

    form {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        justify-content: center;
        margin-bottom: 30px;
    }

    input[type="text"], select {
        padding: 10px;
        font-size: 16px;
        border-radius: 5px;
        border: 1px solid #ddd;
        width: 250px;
    }

    button[type="submit"] {
        background-color: #f9c74f;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    button[type="submit"]:hover {
        background-color: #f1a65f;
    }

    .card {
        border-radius: 8px;
        margin-bottom: 20px;
        padding: 20px;
        transition: transform 0.3s ease;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    }

    .card:hover {
        transform: translateY(-5px);
    }

    .border-success {
        border: 2px solid #28a745;
    }

    .border-warning {
        border: 2px solid #ffc107;
    }

    .border-secondary {
        border: 2px solid #6c757d;
    }

    .card-body {
        padding: 20px;
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
        margin-bottom: 15px;
    }

    .card-text {
        font-size: 1rem;
        color: #555;
        margin-bottom: 10px;
    }

    small.text-muted {
        font-size: 0.875rem;
        color: #888;
    }

    .card .d-flex {
        font-size: 1.1rem;
        align-items: center;
    }

    .card .card-footer {
        border-top: 1px solid #e1e1e1;
        padding-top: 15px;
    }

    .card .card-footer a {
        color: #007bff;
        font-size: 1rem;
        text-decoration: none;
        padding: 5px 10px;
    }

    .card .card-footer a:hover {
        text-decoration: underline;
    }

    .latest-post {
        max-width: 45%;
        padding-left: 20px;
        border-left: 2px solid #ddd;
    }

    .card .actions {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .toggle-heart {
        background: none;
        border: none;
        font-size: 20px;
        cursor: pointer;
    }
</style>

